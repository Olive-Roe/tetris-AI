Bucket list for priority tasks (ordered)
 Make graphical hold display
 Make graphical next queue display
 Make replays playable

Unordered:
 Make Game class

Future plans:
- Implement DAS, ARR, SDF
- Implement sending lines/combo table
- Implement score table
- Implement garbage multiplier, gravity
- Make find_possible_moves function
- Write evaluation function for board cleanliness
- Make basic minimax AI

Priority list values (triage):
1. Debugging things
2. Small new things that are easy to implement, relatively independent, and useful
3. Refactoring things
4. Writing completely new code with large changes

Done:
Make keybinds
Make t-spin detection
Make hard drop function
Make line clear function
Debug text-writing in display.py
Refactor rotate_and_update and _check_kick_tables
Debug "swooshing movement"
Refactor generate_bag()
Debug generate_bag() not generating bag properly
Refactor update_boardstate()
Debug "pieces hover over the first column when dropped"
Refactor Board piece message validation
Debug "pieces moved to the right cause impossible piece lock error"
Add test function for impossible left/right movement being caught
Make extended_boardstate_to_boardstate remove unnecessary lines at the end of boardstate
Debug blocks pushing down other blocks bug
Allow smart_display() to work with the current Board structure
Make change_x() function in Board class
Make t, screen part of init in Board class and update functions to work